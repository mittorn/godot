name: üêß Linux Builds
on: [push, pull_request]

# Global Settings
env:
  GODOT_BASE_BRANCH: 3.x
  SCONSFLAGS: verbose=yes warnings=all werror=no

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-linux
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: "ubuntu-20.04"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Template OVR Utils
            cache-name: linux-template
            target: release
            tools: false
            sconsflags: module_mono_enabled=yes mono_glue=no debug_symbols=no pulseaudio=no target=release arch=x86_64 bits=64 module_websocket_enabled=no module_webrtc_enabled=no module_webxr_enabled=no module_webp_enabled=yes module_webm_enabled=no module_vorbis_enabled=no module_visual_script_enabled=no module_upnp_enabled=no module_tinyexr_enabled=no module_tga_enabled=no module_svg_enabled=no module_stb_vorbis_enabled=no module_squish_enabled=no module_regex_enabled=no module_theora_enabled=no module_pvr_enabled=no module_opus_enabled=no module_ogg_enabled=no module_navigation_enabled=no module_mobile_vr_enabled=no module_minimp3_enabled=no module_mbedtls_enabled=no module_lightmapper_cpu_enabled=no module_jsonrpc_enabled=no module_hdr_enabled=no module_gridmap_enabled=no module_gltf_enabled=no module_fbx_enabled=no module_etc_enabled=no module_enet_enabled=no module_denoise_enabled=no module_dds_enabled=no module_cvtt_enabled=no module_camera_enabled=no module_bullet_enabled=no module_csg_enabled=no module_bmp_enabled=no udev=no touch=no use_static_cpp=no disable_advanced_gui=no builtin_bullet=no builtin_freetype=no builtin_webp=no module_xatlas_unwrap_enabled=no minizip=no optimize=size module_vhacd_enabled=no builtin_certs=no builtin_libpng=no builtin_freetype=no builtin_mbedtls=no use_lto=yes module_jpeg=no 
            build-mono: false
            artifact: true

    steps:
      - uses: actions/checkout@v2

      - name: Linux dependencies
        shell: bash
        run: |
          # Azure repositories are not reliable, we need to prevent azure giving us packages.
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update
          # The actual dependencies
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
              libxinerama-dev libgl1-mesa-dev libglu-dev libxi-dev libxrandr-dev

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }}
          platform: linuxbsd
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      # Generate mono glue
      - name: Generate Mono glue code
        if: ${{ matrix.build-mono }}
        run: |
          DRI_PRIME=0 xvfb-run ${{ matrix.bin }} --generate-mono-glue modules/mono/glue || true

      # Rebuild with mono
      - name: Compilation (mono_glue=yes)
        uses: ./.github/actions/godot-build
        if: ${{ matrix.build-mono }}
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} mono_glue=yes
          platform: linuxbsd
          target: ${{ matrix.target }}
          tools: ${{ matrix.tools }}

      - name: Prepare artifact
        if: ${{ matrix.artifact }}
        run: |
          strip bin/godot.*

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        if: ${{ matrix.artifact }}
        with:
          name: ${{ matrix.cache-name }}
